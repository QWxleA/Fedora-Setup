" vimrc file

" When started as "evim", evim.vim will already have done these settings, bail
" out.
if v:progname =~? "evim"
  finish
endif

" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file (restore to previous version)
  if has('persistent_undo')
    set undofile	" keep an undo file (undo changes after closing)
  endif
endif

" Configure directories for backups
set backup
let &directory = expand('~/.vimdata/swap//')
let &backupdir = expand('~/.vimdata/backup//')
let &undodir   = expand('~/.vimdata/undo//')

" Make sure the directories exist
if !isdirectory(&directory) | call mkdir(&directory, "p") | endif
if !isdirectory(&backupdir) | call mkdir(&backupdir, "p") | endif
if !isdirectory(&undodir)   | call mkdir(&undodir, "p")   | endif

if &t_Co > 2 || has("gui_running")
  " Switch on highlighting the last used search pattern.
  set hlsearch
endif

" Put these in an autocmd group, so that we can delete them easily.
augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78
augroup END

" Add optional packages.
"
" The matchit plugin makes the % command work better, but it is not backwards
" compatible.
" The ! means the package won't be loaded right away but when plugins are
" loaded during initialization.
if has('syntax') && has('eval')
  packadd! matchit
endif

" Editor settings:
set tabstop=3
set shiftwidth=0
"set expandtab
set number
set nowrap

" Statusline:
set statusline=%#PmenuSel# 
set statusline+=%t:\ 
set statusline+=%l:%c\ 
set statusline+=/\ %L
set statusline+=%= " switch to right side
set statusline+=%r\ 
set statusline+=%y\ 
set statusline+=%p%%
set laststatus=2
